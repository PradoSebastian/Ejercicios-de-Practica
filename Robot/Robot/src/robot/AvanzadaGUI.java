/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package robot;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.JToggleButton;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author prado
 */
public class AvanzadaGUI extends javax.swing.JFrame {

    /**
     * Creates new form AvanzadaGUI
     */
    public AvanzadaGUI() {
        initComponents();
        iniciar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tf_abrirApp1 = new javax.swing.JTextField();
        tf_abrirLink = new javax.swing.JTextField();
        cb_mouse = new javax.swing.JComboBox<>();
        tf_mouse_pX = new javax.swing.JTextField();
        tf_mouse_pY = new javax.swing.JTextField();
        cb_teclado = new javax.swing.JComboBox<>();
        tf_teclado_f = new javax.swing.JTextField();
        chB_teclado = new javax.swing.JCheckBox();
        tf_teclado_c = new javax.swing.JTextField();
        cb_teclado_ce = new javax.swing.JComboBox<>();
        tituloA = new javax.swing.JLabel();
        btn_Instrucciones = new javax.swing.JButton();
        panel_info = new javax.swing.JPanel();
        tituloInfo = new javax.swing.JLabel();
        cb_opcion = new javax.swing.JComboBox<>();
        btn_agregar = new javax.swing.JToggleButton();
        btn_Limpiar = new javax.swing.JButton();
        label_tiempo = new javax.swing.JLabel();
        tf_tiempo = new javax.swing.JTextField();
        panel_tabla = new javax.swing.JPanel();
        scroll_tabla = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        btn_Start = new javax.swing.JButton();
        btn_detener = new javax.swing.JButton();
        btn_eliminarAcciones = new javax.swing.JButton();
        btn_volver = new javax.swing.JButton();
        btn_eliminarAccion = new javax.swing.JButton();

        tf_abrirApp1.setText("Ingrese la dirección de la aplicación a abrir");
        tf_abrirApp1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tf_abrirApp1MouseClicked(evt);
            }
        });
        tf_abrirApp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_abrirApp1ActionPerformed(evt);
            }
        });

        tf_abrirLink.setText("Ingrese la dirección web a abrir");
        tf_abrirLink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tf_abrirLinkMouseClicked(evt);
            }
        });
        tf_abrirLink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_abrirLinkActionPerformed(evt);
            }
        });

        cb_mouse.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mover Cursor", "Click Izquierdo y Soltar", "Click Rueda y Soltar", "Click Derecho y Soltar", "Click Izquierdo", "Click Rueda", "Click Derecho", "Soltar" }));
        cb_mouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_mouseActionPerformed(evt);
            }
        });

        tf_mouse_pX.setText("Posición X");
        tf_mouse_pX.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tf_mouse_pXMouseClicked(evt);
            }
        });
        tf_mouse_pX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_mouse_pXActionPerformed(evt);
            }
        });

        tf_mouse_pY.setText("Posición Y");
        tf_mouse_pY.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tf_mouse_pYMouseClicked(evt);
            }
        });
        tf_mouse_pY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_mouse_pYActionPerformed(evt);
            }
        });

        cb_teclado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Presionar y Soltar", "Mantener Presionado", "Soltar", "Escribir Frase" }));
        cb_teclado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_tecladoActionPerformed(evt);
            }
        });

        tf_teclado_f.setText("Oprima en orden las teclas a oprimir");
        tf_teclado_f.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tf_teclado_fMouseClicked(evt);
            }
        });
        tf_teclado_f.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_teclado_fActionPerformed(evt);
            }
        });
        tf_teclado_f.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_teclado_fKeyPressed(evt);
            }
        });

        chB_teclado.setText("¿Es un caracter especial?");
        chB_teclado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chB_tecladoActionPerformed(evt);
            }
        });

        tf_teclado_c.setText("Oprima el caracter deseado");
        tf_teclado_c.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tf_teclado_cMouseClicked(evt);
            }
        });
        tf_teclado_c.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_teclado_cActionPerformed(evt);
            }
        });
        tf_teclado_c.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_teclado_cKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_teclado_cKeyTyped(evt);
            }
        });

        cb_teclado_ce.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alt", "Shift", "Control", "Enter", "Espacio", "BackSpace", "Bloq. Mayus" }));
        cb_teclado_ce.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_teclado_ceActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(780, 400));

        tituloA.setFont(new java.awt.Font("Viner Hand ITC", 3, 14)); // NOI18N
        tituloA.setText("Versión Avanzada");

        btn_Instrucciones.setText("Instrucciones");
        btn_Instrucciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_InstruccionesActionPerformed(evt);
            }
        });

        panel_info.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0)));
        panel_info.setInheritsPopupMenu(true);

        tituloInfo.setFont(new java.awt.Font("Viner Hand ITC", 3, 14)); // NOI18N
        tituloInfo.setText("Ingrese la información de la acción deseada");

        cb_opcion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Abrir una Aplicación", "Abrir un Link", "Acción con el mouse", "Acción con el teclado" }));
        cb_opcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_opcionActionPerformed(evt);
            }
        });

        btn_agregar.setText("Agregar Acción");
        btn_agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregarActionPerformed(evt);
            }
        });

        btn_Limpiar.setText("Limpiar");
        btn_Limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_LimpiarActionPerformed(evt);
            }
        });

        label_tiempo.setText("Tiempo de espera en milisegundos");

        tf_tiempo.setText("0");
        tf_tiempo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_tiempoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_infoLayout = new javax.swing.GroupLayout(panel_info);
        panel_info.setLayout(panel_infoLayout);
        panel_infoLayout.setHorizontalGroup(
            panel_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_infoLayout.createSequentialGroup()
                .addGroup(panel_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panel_infoLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(cb_opcion, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panel_infoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tituloInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panel_infoLayout.createSequentialGroup()
                .addGap(0, 200, Short.MAX_VALUE)
                .addComponent(label_tiempo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tf_tiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_Limpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_agregar)
                .addGap(19, 19, 19))
        );
        panel_infoLayout.setVerticalGroup(
            panel_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_infoLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(tituloInfo)
                .addGap(8, 8, 8)
                .addComponent(cb_opcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_agregar)
                    .addComponent(btn_Limpiar)
                    .addComponent(label_tiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_tiempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panel_tabla.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0)));

        scroll_tabla.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0)));

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "# Acción", "Tipo", "Acción", "Tiempo de Espera"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scroll_tabla.setViewportView(tabla);

        javax.swing.GroupLayout panel_tablaLayout = new javax.swing.GroupLayout(panel_tabla);
        panel_tabla.setLayout(panel_tablaLayout);
        panel_tablaLayout.setHorizontalGroup(
            panel_tablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scroll_tabla, javax.swing.GroupLayout.DEFAULT_SIZE, 691, Short.MAX_VALUE)
        );
        panel_tablaLayout.setVerticalGroup(
            panel_tablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scroll_tabla, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
        );

        btn_Start.setText("Empezar");
        btn_Start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_StartActionPerformed(evt);
            }
        });

        btn_detener.setText("Detener");
        btn_detener.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_detenerActionPerformed(evt);
            }
        });

        btn_eliminarAcciones.setText("Eliminar Acciones");
        btn_eliminarAcciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarAccionesActionPerformed(evt);
            }
        });

        btn_volver.setText("Volver");

        btn_eliminarAccion.setText("Eliminar Acción Seleccionada");
        btn_eliminarAccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarAccionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_Start, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_detener, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(109, 109, 109)
                        .addComponent(btn_eliminarAccion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_eliminarAcciones, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(tituloA, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_volver, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btn_Instrucciones))
                        .addComponent(panel_info, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panel_tabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tituloA)
                    .addComponent(btn_volver)
                    .addComponent(btn_Instrucciones))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel_info, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panel_tabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 54, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_detener)
                    .addComponent(btn_Start)
                    .addComponent(btn_eliminarAccion)
                    .addComponent(btn_eliminarAcciones))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_InstruccionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_InstruccionesActionPerformed
        JOptionPane.showMessageDialog(null, "1. Seleccione el tipo de acción a ejecutar" + 
                "\n   1.1. Tipo Abrir App: \n      Ingrese la dirección del ejectable (.exe) que desea abrir" +
                "\n   1.2. Tipo Abrir Link: \n      Ingrese la dirección web (url) a la que desea navegar" +
                "\n   1.3. Tipo Acción con el Mouse: \n      1.3.1. Seleccione la acción deseada; tenga en cuenta que si oprime un click y no lo suelta, debe soltarlo para poder oprimir otro click"
                + "\n      1.3.2. Digite las coordenadas (X y Y de su pantalla) donde quiere realizar la acción"
                + "\n   1.4. Tipo Acción con el teclado: \n      1.4.1. Seleccione la acción deseada"
                + "\n         1.4.1.1. Las tres primeras acciones son de uso para una unica tecla "
                + "\n            1.4.1.1.1. Seleccione la checkBox si es una tecla especial"
                + "\n               En caso de que se haya seleccionado, seleccione una tecla de las disponibles"
                + "\n               En caso contrario, digite la tecla; Si digita una segunda tecla se limpiara el campo"
                + "\n         1.4.1.2. La ultima acción tomara todas las teclas que sean oprimidas"
                + "\n            1.4.1.2.1. Digite las teclas en orden"
                + "\n2. Si desea que haya un tiempo de espera para la acción digite el tiempo en milisegundos"
                + "\n3. Oprima el boton para agregar la acción"
                + "\n4. Ingrese todas las acciones deseadas"
                + "\n5. Oprima el boton Empezar para ejecutar las acciones deseadas"
                + "\n6. Oprima el boton Detener para cancelar la ejecución de las acciones"
                + "\n7. Una vez terminada la ejecución se regresará a la pantalla de inicio", "Instrucciones", JOptionPane.INFORMATION_MESSAGE);
                
    }//GEN-LAST:event_btn_InstruccionesActionPerformed

    private void tf_abrirApp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_abrirApp1ActionPerformed
        
    }//GEN-LAST:event_tf_abrirApp1ActionPerformed

    private void tf_abrirLinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_abrirLinkActionPerformed
        
    }//GEN-LAST:event_tf_abrirLinkActionPerformed

    private void cb_opcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_opcionActionPerformed
               
        invisible();
        if(this.cb_opcion.getSelectedItem().equals(Accion.TIPO_ABRIR_APP))
        {
            this.tf_abrirApp1.setVisible(true);
        }
        else if(this.cb_opcion.getSelectedItem().equals(Accion.TIPO_ABRIR_LINK))
        {
            this.tf_abrirLink.setVisible(true);
        }
        else if(this.cb_opcion.getSelectedItem().equals(Accion.TIPO_ACCION_MOUSE))
        {
            this.cb_mouse.setVisible(true);
            this.tf_mouse_pX.setVisible(true);
            this.tf_mouse_pY.setVisible(true);
        }
        else if(this.cb_opcion.getSelectedItem().equals(Accion.TIPO_ACCION_TECLADO))
        {
            this.cb_teclado.setVisible(true);
        }
        localizarPanelInfo();
        reiniciarTextFields();
    }//GEN-LAST:event_cb_opcionActionPerformed

    private void cb_mouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_mouseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_mouseActionPerformed

    private void tf_mouse_pXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_mouse_pXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_mouse_pXActionPerformed

    private void tf_mouse_pYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_mouse_pYActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_mouse_pYActionPerformed

    private void tf_abrirLinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tf_abrirLinkMouseClicked
        if(contador_tf_Link == 0)
            this.tf_abrirLink.setText("");
        contador_tf_Link++;
    }//GEN-LAST:event_tf_abrirLinkMouseClicked

    private void tf_abrirApp1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tf_abrirApp1MouseClicked
        if(contador_tf_App == 0)
            this.tf_abrirApp1.setText("");
        contador_tf_App++;
    }//GEN-LAST:event_tf_abrirApp1MouseClicked

    private void cb_tecladoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_tecladoActionPerformed
        
        invisible2();
        if(this.cb_teclado.getSelectedItem().equals(Accion.ACCION_T_PRESS_R) 
                || this.cb_teclado.getSelectedItem().equals(Accion.ACCION_T_HOLD_PRESS)
                || this.cb_teclado.getSelectedItem().equals(Accion.ACCION_T_RELEASE))
        {
            
            this.chB_teclado.setVisible(true);
            this.tf_teclado_c.setVisible(true);
            this.tf_teclado_c.setEditable(true);
        }
        else if(this.cb_teclado.getSelectedItem().equals(Accion.ACCION_T_WRITE))
        {
            this.tf_teclado_f.setVisible(true);
        }
        reiniciarTextFields();
        localizarPanelInfo();
        
    }//GEN-LAST:event_cb_tecladoActionPerformed

    private void tf_teclado_cActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_teclado_cActionPerformed
        
    }//GEN-LAST:event_tf_teclado_cActionPerformed

    private void cb_teclado_ceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_teclado_ceActionPerformed
        teclas = new ArrayList<>();
        if(this.cb_teclado_ce.getSelectedItem().equals("Alt"))
        {
            teclas.add(KeyEvent.VK_ALT);
        }
        else if(this.cb_teclado_ce.getSelectedItem().equals("Shift"))
        {
            teclas.add(KeyEvent.VK_SHIFT);
        }
        else if(this.cb_teclado_ce.getSelectedItem().equals("Control"))
        {
            teclas.add(KeyEvent.VK_CONTROL);
        }
        else if(this.cb_teclado_ce.getSelectedItem().equals("Enter"))
        {
            teclas.add(KeyEvent.VK_ENTER);
        }
        else if(this.cb_teclado_ce.getSelectedItem().equals("Espacio"))
        {
            teclas.add(KeyEvent.VK_SPACE);
        }
        else if(this.cb_teclado_ce.getSelectedItem().equals("BackSpace"))
        {
            teclas.add(KeyEvent.VK_BACK_SPACE);
        }
        else if(this.cb_teclado_ce.getSelectedItem().equals("Bloq. Mayus"))
        {
            teclas.add(KeyEvent.VK_CAPS_LOCK);
        }
        
    }//GEN-LAST:event_cb_teclado_ceActionPerformed

    private void chB_tecladoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chB_tecladoActionPerformed
        if(chB_teclado.isSelected())
        {
            this.tf_teclado_c.setVisible(false);
            this.cb_teclado_ce.setVisible(true);
        }
        else
        {
            this.tf_teclado_c.setVisible(true);
            this.cb_teclado_ce.setVisible(false);
        }
    }//GEN-LAST:event_chB_tecladoActionPerformed

    private void btn_LimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_LimpiarActionPerformed
        invisible();
        reiniciarTextFields();
        localizarPanelInfo();
    }//GEN-LAST:event_btn_LimpiarActionPerformed

    private void btn_agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregarActionPerformed
        
        //Validación de llenado de campos
        if(!(this.tf_abrirApp1.getText().equals(TEXTO_ORIGINAL_TF_APP)) || 
                !(this.tf_abrirLink.getText().equals(TEXTO_ORIGINAL_TF_LINK)) ||
                (!this.tf_mouse_pX.getText().equals(TEXTO_ORIGINAL_TF_X) && !this.tf_mouse_pY.getText().equals(TEXTO_ORIGINAL_TF_Y)) 
                || !(this.tf_teclado_c.getText().equals(TEXTO_ORIGINAL_TF_C)) || 
                !(this.tf_teclado_f.getText().equals(TEXTO_ORIGINAL_TF_F)) ||
                this.chB_teclado.isSelected())
        {
            //Tipo
            int num = 1;
            if(!this.lista.isEmpty())
                num = this.lista.get(lista.size()-1).getNum_accion() + 1;
            String tipo = "";
            String accion = "";
            int tiempo = Integer.parseInt(this.tf_tiempo.getText());
            Object info = null;

            Accion a = null;

            if(this.cb_opcion.getSelectedItem().equals(Accion.TIPO_ABRIR_APP))
            {
                tipo = Accion.TIPO_ABRIR_APP;
                accion = Accion.ACCION_A_APP;
                info = this.tf_abrirApp1.getText();
            }
            else if(this.cb_opcion.getSelectedItem().equals(Accion.TIPO_ABRIR_LINK))
            {
                tipo = Accion.TIPO_ABRIR_LINK;
                accion = Accion.ACCION_A_LINK;
                info = this.tf_abrirLink.getText();
            }
            else if(this.cb_opcion.getSelectedItem().equals(Accion.TIPO_ACCION_MOUSE))
            {
                tipo = Accion.TIPO_ACCION_MOUSE;
                ArrayList<Integer> array = new ArrayList<>();
                int posx = Integer.parseInt(this.tf_mouse_pX.getText());
                int posy = Integer.parseInt(this.tf_mouse_pY.getText());
                array.add(posx);
                array.add(posy);
                info = array;            

                if(this.cb_mouse.getSelectedItem().equals(Accion.ACCION_M_MOVER_CURSOR))
                {
                    accion = Accion.ACCION_M_MOVER_CURSOR;
                }
                else if(this.cb_mouse.getSelectedItem().equals(Accion.ACCION_M_CLICK_I_S))
                {
                    accion = Accion.ACCION_M_CLICK_I_S;
                }
                else if(this.cb_mouse.getSelectedItem().equals(Accion.ACCION_M_CLICK_R_S))
                {
                    accion = Accion.ACCION_M_CLICK_R_S;
                }
                else if(this.cb_mouse.getSelectedItem().equals(Accion.ACCION_M_CLICK_D_S))
                {
                    accion = Accion.ACCION_M_CLICK_D_S;
                }
                else if(this.cb_mouse.getSelectedItem().equals(Accion.ACCION_M_CLICK_I))
                {
                    accion = Accion.ACCION_M_CLICK_I;
                }
                else if(this.cb_mouse.getSelectedItem().equals(Accion.ACCION_M_CLICK_R))
                {
                    accion = Accion.ACCION_M_CLICK_R;
                }
                else if(this.cb_mouse.getSelectedItem().equals(Accion.ACCION_M_CLICK_D))
                {
                    accion = Accion.ACCION_M_CLICK_D;
                }
                else if(this.cb_mouse.getSelectedItem().equals(Accion.ACCION_M_SOLTAR))
                {
                    accion = Accion.ACCION_M_SOLTAR;
                }
            }
            else if(this.cb_opcion.getSelectedItem().equals(Accion.TIPO_ACCION_TECLADO))
            {
                tipo = Accion.TIPO_ACCION_TECLADO;
                info = teclas;
                if(this.cb_teclado.getSelectedItem().equals(Accion.ACCION_T_PRESS_R))
                {
                    accion = Accion.ACCION_T_PRESS_R;
                }
                else if(this.cb_teclado.getSelectedItem().equals(Accion.ACCION_T_HOLD_PRESS))
                {
                    accion = Accion.ACCION_T_HOLD_PRESS;
                }
                else if(this.cb_teclado.getSelectedItem().equals(Accion.ACCION_T_RELEASE))
                {
                    accion = Accion.ACCION_T_RELEASE;
                }
                else if(this.cb_teclado.getSelectedItem().equals(Accion.ACCION_T_WRITE))
                {
                    accion = Accion.ACCION_T_WRITE;
                }
            }

            a = new Accion(num, tipo, accion, info, tiempo);
            lista.add(a);

            invisible();
            reiniciarTextFields();
            localizarPanelInfo();
            actualizarTabla(a);
        }
        else
        {
            JOptionPane.showMessageDialog(null, "ERROR: Por favor llena todos los campos", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        this.btn_agregar.setSelected(false);
        
    }//GEN-LAST:event_btn_agregarActionPerformed

    private void tf_tiempoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_tiempoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_tiempoActionPerformed

    private void tf_teclado_cKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_teclado_cKeyTyped
        
    }//GEN-LAST:event_tf_teclado_cKeyTyped

    private void tf_teclado_fActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_teclado_fActionPerformed
        
    }//GEN-LAST:event_tf_teclado_fActionPerformed

    private void tf_teclado_fKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_teclado_fKeyPressed
        teclas.add(evt.getKeyCode());
    }//GEN-LAST:event_tf_teclado_fKeyPressed

    private void tf_teclado_cMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tf_teclado_cMouseClicked
        if(contador_tf_c == 0)
            this.tf_teclado_c.setText("");
        contador_tf_c++;
    }//GEN-LAST:event_tf_teclado_cMouseClicked

    private void tf_teclado_fMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tf_teclado_fMouseClicked
        if(contador_tf_f == 0)
            this.tf_teclado_f.setText("");
        contador_tf_f++;
    }//GEN-LAST:event_tf_teclado_fMouseClicked

    private void tf_teclado_cKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_teclado_cKeyPressed
        if(contador_tf_c_teclas == 0)
        {
            this.teclas = new ArrayList<>();
            this.teclas.add(evt.getKeyCode());
            this.contador_tf_c_teclas ++;
            System.out.println(evt.getKeyCode());
        }
        if(contador_tf_c_teclas == 1)
        {
            this.tf_teclado_c.setText("");
            this.contador_tf_c_teclas --;
        }
        
    }//GEN-LAST:event_tf_teclado_cKeyPressed

    private void tf_mouse_pXMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tf_mouse_pXMouseClicked
        if(contador_tf_X == 0)
            this.tf_mouse_pX.setText("");
        contador_tf_X++;
    }//GEN-LAST:event_tf_mouse_pXMouseClicked

    private void tf_mouse_pYMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tf_mouse_pYMouseClicked
        if(contador_tf_Y == 0)
            this.tf_mouse_pY.setText("");
        contador_tf_Y++;
    }//GEN-LAST:event_tf_mouse_pYMouseClicked

    private void btn_StartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_StartActionPerformed
        this.btn_Start.setSelected(false);
    }//GEN-LAST:event_btn_StartActionPerformed

    private void btn_detenerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_detenerActionPerformed
        this.btn_detener.setVisible(false);
    }//GEN-LAST:event_btn_detenerActionPerformed

    private void btn_eliminarAccionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarAccionesActionPerformed
        eliminarAcciones();
    }//GEN-LAST:event_btn_eliminarAccionesActionPerformed

    private void btn_eliminarAccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarAccionActionPerformed
        int row = this.tabla.getSelectedRow();
        eliminarAccion(row+1);
    }//GEN-LAST:event_btn_eliminarAccionActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Instrucciones;
    private javax.swing.JButton btn_Limpiar;
    private javax.swing.JButton btn_Start;
    private javax.swing.JToggleButton btn_agregar;
    private javax.swing.JButton btn_detener;
    private javax.swing.JButton btn_eliminarAccion;
    private javax.swing.JButton btn_eliminarAcciones;
    private javax.swing.JButton btn_volver;
    private javax.swing.JComboBox<String> cb_mouse;
    private javax.swing.JComboBox<String> cb_opcion;
    private javax.swing.JComboBox<String> cb_teclado;
    private javax.swing.JComboBox<String> cb_teclado_ce;
    private javax.swing.JCheckBox chB_teclado;
    private javax.swing.JLabel label_tiempo;
    private javax.swing.JPanel panel_info;
    private javax.swing.JPanel panel_tabla;
    private javax.swing.JScrollPane scroll_tabla;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField tf_abrirApp1;
    private javax.swing.JTextField tf_abrirLink;
    private javax.swing.JTextField tf_mouse_pX;
    private javax.swing.JTextField tf_mouse_pY;
    private javax.swing.JTextField tf_teclado_c;
    private javax.swing.JTextField tf_teclado_f;
    private javax.swing.JTextField tf_tiempo;
    private javax.swing.JLabel tituloA;
    private javax.swing.JLabel tituloInfo;
    // End of variables declaration//GEN-END:variables

    //TextoOriginal TextFields
    private static String TEXTO_ORIGINAL_TF_APP = "Ingrese la dirección de la aplicación a abrir";
    private static String TEXTO_ORIGINAL_TF_LINK = "Ingrese la dirección web a abrir";
    private static String TEXTO_ORIGINAL_TF_X = "Posición X";
    private static String TEXTO_ORIGINAL_TF_Y = "Posición Y";
    private static String TEXTO_ORIGINAL_TF_C = "Oprima el caracter deseado";
    private static String TEXTO_ORIGINAL_TF_F = "Oprima en orden las teclas a oprimir";
    
    //Contadores
    private int contador_tf_App = 0;
    private int contador_tf_Link = 0;
    private int contador_tf_X = 0;
    private int contador_tf_Y = 0;
    private int contador_tf_c = 0;
    private int contador_tf_f = 0;
    private int contador_tf_c_teclas = 0;
    
    //Lista de Acciones
    private ArrayList<Accion> lista = new ArrayList<>();
    
    //Lista de EventosTeclado
    private ArrayList<Integer> teclas = new ArrayList<>();
    
    //Modelo de la tabla
    private DefaultTableModel md;
    
    private void iniciar() 
    {
        this.getContentPane().setBackground(Color.WHITE);
        this.setTitle("Robot");
        this.setLocationRelativeTo(null);               
        this.panel_info.setBackground(Color.WHITE);
        this.btn_detener.setVisible(false);
        localizarPanelInfo();
        invisible();
        crearModeloTabla(); 
    }
    
    public void reiniciarTextFields()
    {
        this.contador_tf_App = 0;
        this.contador_tf_Link = 0;
        this.contador_tf_X = 0;
        this.contador_tf_Y = 0;
        this.contador_tf_c = 0;
        this.contador_tf_f = 0;
        this.contador_tf_c_teclas = 0;
        this.tf_abrirApp1.setText(TEXTO_ORIGINAL_TF_APP);
        this.tf_abrirLink.setText(TEXTO_ORIGINAL_TF_LINK);
        this.tf_mouse_pX.setText(TEXTO_ORIGINAL_TF_X);
        this.tf_mouse_pY.setText(TEXTO_ORIGINAL_TF_Y);
        this.tf_teclado_c.setEditable(true);
        this.tf_teclado_c.setFocusable(true);
        this.tf_teclado_c.setText(TEXTO_ORIGINAL_TF_C);
        this.tf_teclado_f.setText(TEXTO_ORIGINAL_TF_F);
        this.tf_tiempo.setText("0");
        teclas = new ArrayList<>();
    }
    
    public void invisible ()
    {
        this.tf_abrirApp1.setVisible(false);
        this.tf_abrirLink.setVisible(false);
        this.cb_mouse.setVisible(false);
        this.tf_mouse_pX.setVisible(false);
        this.tf_mouse_pY.setVisible(false);
        this.cb_teclado.setVisible(false);
        this.chB_teclado.setVisible(false);
        this.tf_teclado_c.setVisible(false);
        this.cb_teclado_ce.setVisible(false);
        this.tf_teclado_f.setVisible(false);
        this.btn_detener.setVisible(false);
        this.chB_teclado.setSelected(false);
    }
    
    public void invisible2()
    {
        this.chB_teclado.setVisible(false);
        this.tf_teclado_c.setVisible(false);
        this.cb_teclado_ce.setVisible(false);
        this.tf_teclado_f.setVisible(false);
        this.chB_teclado.setSelected(false);
    }

    public void localizarPanelInfo() 
    {        
        
        javax.swing.GroupLayout panel_infoLayout = new javax.swing.GroupLayout(panel_info);
        panel_info.setLayout(panel_infoLayout);
        panel_infoLayout.setHorizontalGroup(
            panel_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_infoLayout.createSequentialGroup()
                .addGroup(panel_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panel_infoLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(cb_opcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tf_abrirLink, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tf_abrirApp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cb_mouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cb_teclado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tf_mouse_pX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tf_teclado_f, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(chB_teclado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18,18,18)
                        .addComponent(cb_teclado_ce, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)   
                        .addComponent(tf_mouse_pY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)  
                        .addGap(18, 18, 18)
                        .addComponent(tf_teclado_c, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)   
                        
                    )
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panel_infoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tituloInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panel_infoLayout.createSequentialGroup()
                .addGap(0, 200, Short.MAX_VALUE)
                .addComponent(label_tiempo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tf_tiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_Limpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_agregar)
                .addGap(19, 19, 19))
        );
        panel_infoLayout.setVerticalGroup(
            panel_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_infoLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(tituloInfo)
                .addGroup(panel_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addGap(8, 8, 8)
                    .addComponent(cb_opcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_mouse_pX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_mouse_pY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)                    
                    .addComponent(tf_abrirLink, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_mouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_teclado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chB_teclado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_teclado_c, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_teclado_ce, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_teclado_f, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)                    
                    .addComponent(tf_abrirApp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_agregar)
                    .addComponent(btn_Limpiar)
                    .addComponent(label_tiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_tiempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        
    }
    
    public void crearModeloTabla()
    {
        String data[][] = {};
        String cabeza[] = {"# Acción", "Tipo", "Acción", "Tiempo de Espera"};
        md = new DefaultTableModel(data, cabeza);
        this.tabla.setModel(md);
    }
    
    public void actualizarTabla(Accion a)
    {
        Vector<Object> array = new Vector<>();
        array.add(a.getNum_accion());
        array.add(a.getTipo());
        array.add(a.getAccion());
        array.add(a.getTiempoMs());
        md.addRow(array);
    }
    
    public void actualizarTabla(ArrayList<Accion> arreglo)
    {
        crearModeloTabla();
        for (Accion a : arreglo)
        {
            Vector<Object> array = new Vector<>();
            array.add(a.getNum_accion());
            array.add(a.getTipo());
            array.add(a.getAccion());
            array.add(a.getTiempoMs());
            md.addRow(array);
        }
    }
    
    public void reiniciarFrame()
    {
        invisible();
        reiniciarTextFields();
        localizarPanelInfo();
        eliminarAcciones();
    }
    
    public void eliminarAccion(int num)
    {
        for (Accion a : lista) 
        {
            if(a.getNum_accion() == num)
            {
                lista.remove(a);
                break;
            }
        }
        for (Accion a : lista) 
        {
            if(a.getNum_accion()>num)
            {
                a.setNum_accion(a.getNum_accion() -1);
            }
        }
        
        actualizarTabla(lista);
        
    }
    
    public void eliminarAcciones()
    {
        this.lista = new ArrayList<>();
        crearModeloTabla();
    }

    public JButton getBtn_Instrucciones() {
        return btn_Instrucciones;
    }

    public JButton getBtn_Limpiar() {
        return btn_Limpiar;
    }

    public JToggleButton getBtn_agregar() {
        return btn_agregar;
    }

    public JComboBox<String> getCb_mouse() {
        return cb_mouse;
    }

    public JComboBox<String> getCb_opcion() {
        return cb_opcion;
    }

    public JComboBox<String> getCb_teclado() {
        return cb_teclado;
    }

    public JComboBox<String> getCb_teclado_ce() {
        return cb_teclado_ce;
    }

    public JCheckBox getChB_teclado() {
        return chB_teclado;
    }

    public JPanel getPanel_info() {
        return panel_info;
    }

    public JPanel getPanel_tabla() {
        return panel_tabla;
    }

    public JScrollPane getScroll_tabla() {
        return scroll_tabla;
    }

    public JTable getTabla() {
        return tabla;
    }

    public JTextField getTf_abrirApp1() {
        return tf_abrirApp1;
    }

    public JTextField getTf_abrirLink() {
        return tf_abrirLink;
    }

    public JTextField getTf_mouse_pX() {
        return tf_mouse_pX;
    }

    public JTextField getTf_mouse_pY() {
        return tf_mouse_pY;
    }

    public JTextField getTf_teclado_c() {
        return tf_teclado_c;
    }

    public JTextField getTf_teclado_f() {
        return tf_teclado_f;
    }

    public JLabel getTituloA() {
        return tituloA;
    }

    public JLabel getTituloInfo() {
        return tituloInfo;
    }

    public int getContador_tf_App() {
        return contador_tf_App;
    }

    public int getContador_tf_Link() {
        return contador_tf_Link;
    }

    public int getContador_tf_X() {
        return contador_tf_X;
    }

    public int getContador_tf_Y() {
        return contador_tf_Y;
    }

    public int getContador_tf_c() {
        return contador_tf_c;
    }

    public int getContador_tf_f() {
        return contador_tf_f;
    }

    public JButton getBtn_Start() {
        return btn_Start;
    }

    public JLabel getLabel_tiempo() {
        return label_tiempo;
    }

    public JTextField getTf_tiempo() {
        return tf_tiempo;
    }

    public int getContador_tf_c_teclas() {
        return contador_tf_c_teclas;
    }

    public ArrayList<Accion> getLista() {
        return lista;
    }

    public ArrayList<Integer> getTeclas() {
        return teclas;
    }

    public DefaultTableModel getMd() {
        return md;
    }

    public JButton getBtn_detener() {
        return btn_detener;
    }

    public JButton getBtn_eliminarAccion() {
        return btn_eliminarAccion;
    }

    public JButton getBtn_eliminarAcciones() {
        return btn_eliminarAcciones;
    }

    public JButton getBtn_volver() {
        return btn_volver;
    }
    
    
    
}
